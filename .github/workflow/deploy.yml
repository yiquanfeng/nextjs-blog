name: Blog to GitHub Pages
on:
  push:
    branches:
      - main

# 3. 工作流的权限
# 这是为了允许 Actions 将生成的文件写入到 gh-pages 分支
permissions:
  contents: read
  pages: write
  id-token: write
# 4. 环境变量
# 允许 Actions 在部署时访问页面
environment:
  name: github-pages
  url: ${{ steps.deployment.outputs.page_url }}
# 5. 定义要执行的任务（构建和部署）的序列
jobs:
  build:
    # 指定运行环境为最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 6. 检出你的项目代码
      - name: Checkout repository
        uses: actions/checkout@v4
      # 7. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24' # 或你项目使用的 Node.js 版本
          cache: 'npm'       # 加速 npm 安装
      # 8. 安装项目依赖
      - name: Install dependencies
        run: npm install
      # 9. 构建静态网站
      - name: Build static website
        run: npm run build # 这会执行 next build 并生成 'out' 文件夹
      # 10. 上传构建产物，以便部署任务使用
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out # 指定要上传的文件夹
  # 11. 部署任务
  deploy:
    # 需要构建任务成功完成后才能运行
    needs: build
    # 使用 GitHub 官方提供的 Pages 部署器
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 使用官方的部署 action